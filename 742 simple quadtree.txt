#include <iostream>
#include <cmath>
using namespace std;
char grid[1234][1234];

int solve(int left, int right, int up, int down) {
	int numOfNodes = 1;
	int c = -1;
	int split = 0;
	for (int x = up; x <= down; x++) {
		for (int y = left; y <= right; y++) {
			int color = grid[x][y] - '0';
			if (c == -1) {
				c = color;
			}
			else if (c != color) {
				split = 1;
			}
		}
	}
	if (split == 1 && right - left > 0) {
		int m1 = (left + right) / 2;
		int m2 = (up + down) / 2;
		numOfNodes += solve(left, m1, up, m2);
		numOfNodes += solve(left, m1, m2 + 1, down);
		numOfNodes += solve(m1 + 1, right, up, m2);
		numOfNodes += solve(m1 + 1, right, m2 + 1, down);
	}
	return numOfNodes;
}

int main() {
	int N;
	while (cin >> N) {
		int m = pow(2, N);
		for (int i = 1; i <= m; i++) {
			for (int j = 1; j <= m; j++) {
				cin >> grid[i][j];
			}
		}
		cout << solve(1, m, 1, m) << endl;
	}
	return 0;
}