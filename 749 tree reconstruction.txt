#include <iostream>
#include <vector>
using namespace std;

vector <int> postOrder;

int findRootIndex(int order[], int x, int N) {
	for (int i = 0; i < N; i++) {
		if (order[i] == x) {
			return i;
		}
	}
	return -1;
}

void findPostOrder(int inOrder[], int preOrder[], int N) {
	int root = findRootIndex(inOrder, preOrder[0], N);
	if (root != 0) {
		findPostOrder(inOrder, preOrder + 1, root);
	}
	if (root != N - 1) {
		findPostOrder(inOrder + root + 1, preOrder + root + 1, N - root - 1);
	}
	postOrder.push_back(preOrder[0]);
}

int main() {
	int T;
	cin >> T;
	while (T--) {
		int preOrder[100], inOrder[100], N;
		cin >> N;
		for (int i = 0; i < N; i++) {
			cin >> preOrder[i];
		}
		for (int i = 0; i < N; i++) {
			cin >> inOrder[i];
		}
		findPostOrder(inOrder, preOrder, N);
		for (int i = 0; i < N; i++) {
			if (i != N - 1)
				cout << postOrder[i] << " ";
			else
				cout << postOrder[i] << endl;
		}
		postOrder.clear();
	}
	return 0;
}