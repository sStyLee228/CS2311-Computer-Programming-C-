#include <iostream>
using namespace std;

void countSort(long int arr[], int n, int exp)
{
	long int *output = new long int[n]; 
	int i, count[4096] = { 0 };
	for (i = 0; i < n; i++)
		count[(arr[i] >> exp) & 4095]++;
	for (i = 1; i < 4096; i++)
		count[i] += count[i - 1];
	for (i = n - 1; i >= 0; i--) {
		output[count[(arr[i] >> exp) & 4095] - 1] = arr[i];
		count[(arr[i] >> exp) & 4095]--;
	}
	for (i = 0; i < n; i++)
		arr[i] = output[i];
	delete[] output;
}

int main() {
	int T, N, Q;
	cin >> T;
	while (T--) {
		cin >> N >> Q;
		long int *seq2 = new long int[N];
		long int maxFib = 1;
		seq2[0] = 1; seq2[1] = 1;
		for (int i = 2; i < N; i++) {
			seq2[i] = (seq2[i - 2] + seq2[i - 1]) % Q;
			if (maxFib < seq2[i]) {
				maxFib = seq2[i];
			}
		}
		for (long int i = 0; maxFib >> i > 0; i += 10) {
			countSort(seq2, N, i);
		}
		long long int ans = 0;
		for (long int i = 1; i <= N; i++) {
			ans += (seq2[i - 1] * i) % Q;
		}
		delete[] seq2;
		cout << ans % Q << endl;
	}
	return 0;
}